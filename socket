#!/usr/bin/python
# -*- coding: utf-8 -*-

# The modules required
import sys
import socket

BUFFER_SIZE = 1024


def send_and_receive_tcp(address, port, message):
    tcpsocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

    tcpsocket.connect((address, port))
    tcpsocket.send(message)
    data = tcpsocket.recv(BUFFER_SIZE)
    print(data)
    tcpsocket.close()

    send_and_receive_udp(address, port, data)

    return


def send_and_receive_udp(address, port, message):
    udpsocket = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    udpsocket.sendto(message, (address, port))

    while True:
        data, addr = udpsocket.recvfrom(1024)
        print(data)

        if data == 'QUIT':
            break

            # create UDP socket
            # send given message to given address and port using the socket
            # socket programming python
            # while True
            # receive data from socket
            # print received data
            # if received data equals 'QUIT'
            # break the loop

            # close the socket

    return


def main():
    USAGE = 'usage: %s <server address> <server port> <message>' % sys.argv[0]

    try:
        # Get the server address, port and message from command line arguments
        # Use
        server_address = str(sys.argv[1])
        server_tcpport = int(sys.argv[2])
        message = str(sys.argv[3])
    except (IndexError, ValueError):
        # Print usage instructions and exit if we didn't get proper arguments
        sys.exit(USAGE)

    send_and_receive_tcp(server_address, server_tcpport, message)


if __name__ == '__main__':
    # Call the main function when this script is executed
    main()
